{"version":3,"sources":["utils/queries.js","utils/auth.js","utils/localStorage.js","pages/SearchBooks.js","utils/API.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["GET_ME","gql","ADD_USER","CHECK_USER","SAVE_BOOK","DELETE_BOOK","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removeBookId","bookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","console","log","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","event","preventDefault","fetch","response","ok","Error","json","items","bookData","map","book","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","link","infoLink","error","useMutation","saveBook","handleSaveBook","data","bookToSave","find","Auth","loggedIn","variables","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBooks","userData","setUserData","useQuery","loading","deleteBook","resp","getUserData","user","me","handleDeleteBook","savedBooks","undefined","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","createUser","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.163d6d67.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\n\r\nexport const GET_USER = gql`\r\n    query getUser($_id: ID!) {\r\n        getUser(_id: $id) {\r\n            _id\r\n            username\r\n            email\r\n            savedBooks {\r\n                authors\r\n                description\r\n                bookId\r\n                image\r\n                link\r\n                title\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_ME = gql`\r\n    query me {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            savedBooks {\r\n                authors\r\n                description\r\n                bookId\r\n                image\r\n                link\r\n                title\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ADD_USER = gql`\r\n    mutation createUser($username: String!, $email: String!, $password: String!){\r\n        createUser(username: $username, email: $email, password: $password){\r\n            token \r\n            user {\r\n                _id\r\n                username\r\n                email\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CHECK_USER = gql`\r\n    mutation login($email: String!, $password: String!){\r\n        login(email: $email, password: $password){\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n                email\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SAVE_BOOK = gql`\r\n    mutation saveBook($authors: [String]!, $description: String!, $bookId: ID!, $image: String!, $link: String!, $title: String!){\r\n        saveBook(authors: $authors, description: $description, bookId: $bookId, image: $image, link: $link, title: $title){\r\n            _id\r\n            username\r\n            email\r\n            savedBooks {\r\n                authors\r\n                description\r\n                bookId\r\n                image\r\n                link\r\n                title\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_BOOK = gql`\r\n    mutation deleteBook($bookId: ID!){\r\n        deleteBook(bookId: $bookId){\r\n            _id\r\n            username\r\n            email\r\n            savedBooks {\r\n                authors\r\n                description\r\n                bookId\r\n                image\r\n                link\r\n                title\r\n            }\r\n        }\r\n    }\r\n`","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","export const getSavedBookIds = () => {\r\n  const savedBookIds = localStorage.getItem('saved_books')\r\n    ? JSON.parse(localStorage.getItem('saved_books'))\r\n    : [];\r\n\r\n  return savedBookIds;\r\n};\r\n\r\nexport const saveBookIds = (bookIdArr) => {\r\n  if (bookIdArr.length) {\r\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\r\n  } else {\r\n    localStorage.removeItem('saved_books');\r\n  }\r\n};\r\n\r\nexport const removeBookId = (bookId) => {\r\n  const savedBookIds = localStorage.getItem('saved_books')\r\n    ? JSON.parse(localStorage.getItem('saved_books'))\r\n    : null;\r\n\r\n  if (!savedBookIds) {\r\n    return false;\r\n  }\r\n\r\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\r\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\r\n\r\n  return true;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { SAVE_BOOK } from '../utils/queries';\r\nimport Auth from '../utils/auth';\r\nimport { searchGoogleBooks } from '../utils/API';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n  console.log(searchedBooks);\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchGoogleBooks(searchInput);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      // items.forEach(item => {\r\n      //   console.log(item.volumeInfo.authors[0])\r\n      // })\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || [\"Information unavailable\"],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n        link: book.volumeInfo.infoLink\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const [saveBook, { err, data }] = useMutation(SAVE_BOOK);\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      console.log(bookToSave);\r\n      const { data } = await saveBook({\r\n        variables: {\r\n          bookId: bookToSave.bookId,\r\n          authors: bookToSave.authors,\r\n          description: bookToSave.description,\r\n          image: bookToSave.image,\r\n          title: bookToSave.title,\r\n          link: bookToSave.link\r\n\r\n        }\r\n      })\r\n      \r\n      console.log(data);\r\n\r\n      if (!data) {\r\n        throw new Error('something went wrong!');\r\n        \r\n      }\r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","// route to get logged in user's info (needs the token)\r\nexport const getMe = (token) => {\r\n  return fetch('/api/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createUser = (userData) => {\r\n  return fetch('/api/users', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\n// save book data for a logged in user\r\nexport const saveBook = (bookData, token) => {\r\n  return fetch('/api/users', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(bookData),\r\n  });\r\n};\r\n\r\n// remove saved book data for a logged in user\r\nexport const deleteBook = (bookId, token) => {\r\n  return fetch(`/api/users/books/${bookId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n// make a search to google books api\r\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\r\nexport const searchGoogleBooks = (query) => {\r\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Card, Button, CardColumns } from 'react-bootstrap';\r\nimport { GET_ME } from '../utils/queries';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { DELETE_BOOK } from '../utils/queries';\r\n// import { getMe, deleteBook } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeBookId } from '../utils/localStorage';\r\n\r\nconst SavedBooks = () => {\r\n  const [userData, setUserData] = useState({});\r\n  const { loading, data } = useQuery(GET_ME);\r\n  const [ deleteBook, {err, resp}] = useMutation(DELETE_BOOK);\r\n  console.log(userData)\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  // const userDataLength = Object.keys(userData).length;\r\n\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const user = data?.me || data?.user || {};\r\n\r\n        if (!user) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [data?.me, data?.user]);\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const {data} = await deleteBook({\r\n        variables: { bookId }\r\n      });\r\n\r\n      if (!data) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n      setUserData(data.deleteBook);\r\n      // upon success, remove book's id from localStorage\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (loading) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks !== undefined && userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/queries';\r\n\r\n// import { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [createUser, {err, data }] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      console.log(\"HELLO\");\r\n      const { data } = await createUser({\r\n        variables: { ...userFormData }\r\n      });\r\n      console.log(data);\r\n      console.log(\"Second\");\r\n      if (!data) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      Auth.login(data.createUser.token);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { CHECK_USER } from '../utils/queries';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, {error, data}] = useMutation(CHECK_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...userFormData }\r\n      });\r\n\r\n      if (!data) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            Google Books Search\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link>\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/saved'>\r\n                    See Your Books\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\r\nimport SearchBooks from './pages/SearchBooks';\r\nimport SavedBooks from './pages/SavedBooks';\r\nimport Navbar from './components/Navbar';\r\nimport {setContext} from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : ``\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <>\r\n          <Navbar />\r\n          <Routes>\r\n            <Route path='/' element={<SearchBooks />} />\r\n            <Route path='/saved' element={<SavedBooks />} />\r\n          </Routes>\r\n        </>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}